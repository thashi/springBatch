{"version":3,"sources":["components/MatchDetailCard.js","components/YearSelector.js","pages/MatchPage.js","components/MatchSmallCard.js","pages/TeamPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","YearSelector","years","i","process","push","map","year","MatchPage","useState","matches","setMatches","useParams","useEffect","a","fetch","response","json","data","fetchMatches","id","MatchSmallCard","TeamPage","team","setTeam","fetchTeam","title","value","totalMatches","totalWins","color","slice","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10a7404b.chunk.js","sourcesContent":["import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport \"./MatchDetailCard.scss\";\r\n\r\nexport const MatchDetailCard = ({ teamName, match }) => {\r\n    if (!match) return null;\r\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n    const otherTeamRoute = `/teams/${otherTeam}`;\r\n    const isMatchWon = teamName === match.matchWinner;\r\n    return (\r\n        <div className={isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card'}>\r\n            <div>\r\n                <span className=\"vs\">vs</span> <h1><Link to={otherTeamRoute}> {otherTeam} </Link></h1>\r\n                <h2 className=\"match-date\">{match.date}</h2>\r\n                <h3 className=\"match-venue\">at {match.venue}</h3>\r\n                <h3 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</h3>\r\n            </div>\r\n            <div className=\"additional-detail\">\r\n                <h3>First Innings</h3>\r\n                <p>{match.team1}</p>\r\n                <h3>Second Innings</h3>\r\n                <p>{match.team2}</p>\r\n                <h3>Man of the match</h3>\r\n                <p>{match.playerOfMatch}</p>\r\n                <h3>Umpires</h3>\r\n                <p>{match.umpire1}, {match.umpire2}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './YearSelector.scss';\r\n\r\nexport const YearSelector = ({ teamName }) => {\r\n    let years = [];\r\n    const startYear = process.env.REACT_APP_DATA_START_YEAR;\r\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\r\n\r\n    for (let i = startYear; i <= endYear; i++) {\r\n        years.push(i);\r\n    }\r\n\r\n    return (\r\n        <ol className=\"YearSelector\">\r\n            { years.map(year => (\r\n                <li key={year}>\r\n                    <Link to={`/teams/${teamName}/matches/${year}`}>{year}</Link>\r\n                </li>\r\n            ))}\r\n        </ol>\r\n    )\r\n}","import { React, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\n// import { MatchSmallCard } from '../components/MatchSmallCard';\r\nimport { YearSelector } from '../components/YearSelector';\r\n\r\nimport './MatchPage.scss';\r\n\r\nexport const MatchPage = () => {\r\n\r\n  const [matches, setMatches] = useState([]);\r\n  const { teamName, year } = useParams();\r\n  useEffect(\r\n    () => {\r\n      const fetchMatches = async () => {\r\n        const response = await fetch(`http://localhost:8080/team/${teamName}/matches?year=${year}`);\r\n        const data = await response.json();\r\n        setMatches(data);\r\n      };\r\n      fetchMatches();\r\n    }, [teamName, year]\r\n  );\r\n  return (\r\n    <div className=\"MatchPage\">\r\n      <div className=\"year-selector\">\r\n        <h3>Select Year</h3>\r\n        <YearSelector key={year} teamName={teamName} />\r\n      </div>\r\n      <div>\r\n        <h1 className=\"page-heading\">{teamName} matches in {year}</h1>\r\n        {\r\n          matches.map(match => <MatchDetailCard key={match.id} teamName={teamName} match={match} />)\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './MatchSmallCard.scss';\r\n\r\nexport const MatchSmallCard = ({ teamName, match }) => {\r\n  if (!match) return null;\r\n  const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n  const otherTeamRoute = `/teams/${otherTeam}`;\r\n  const isMatchWon = teamName === match.matchWinner;\r\n  return (\r\n    <div className={isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card'}>\r\n      <span className=\"vs\">vs</span> <h3><Link to={otherTeamRoute}> {otherTeam} </Link>\r\n      </h3>\r\n      <p className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</p>\r\n    </div>\r\n  );\r\n}","import { React, useEffect, useState } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport { MatchSmallCard } from '../components/MatchSmallCard';\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\n\r\nimport './TeamPage.scss';\r\n\r\nexport const TeamPage = () => {\r\n\r\n  const [team, setTeam] = useState({ matches: [] });\r\n  const { teamName } = useParams();\r\n\r\n  useEffect(\r\n    () => {\r\n      const fetchTeam = async () => {\r\n        const response = await fetch(`http://localhost:8080/team/${teamName}`);\r\n\r\n        const data = await response.json();\r\n        setTeam(data);\r\n      };\r\n      fetchTeam();\r\n\r\n\r\n    }, [teamName]\r\n  );\r\n\r\n  if (!team || !team.teamName) {\r\n    return <h1>Team not found!</h1>\r\n  }\r\n\r\n  return (\r\n    <div className=\"TeamPage\">\r\n      <div className=\"team-name-section\">\r\n        <h1 className=\"team-name\">{team.teamName}</h1>\r\n      </div>\r\n      <div className=\"win-loss-section\">\r\n        Wins / Losses\r\n        <PieChart\r\n          data={[\r\n\r\n            { title: 'Losses', value: team.totalMatches - team.totalWins, color: '#a34d5d' },\r\n            { title: 'Wins', value: team.totalWins, color: '#4da375' }\r\n          ]}\r\n        />      </div>\r\n      <div className=\"match-detail-section\">\r\n        <h3>Latest Matches</h3>\r\n        <MatchDetailCard teamName={team.teamName} match={team.matches[0]} />\r\n      </div>\r\n      {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName={team.teamName} match={match} />)}\r\n      <div className=\"more-link\">\r\n        <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More ></Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './TeamTile.scss';\r\n\r\nexport const TeamTile = ({ teamName }) => {\r\n    return (\r\n        <div className=\"TeamTile\">\r\n            <h1>\r\n                <Link to={`/teams/${teamName}`} >{teamName}</Link>\r\n            </h1>\r\n        </div>\r\n    )\r\n}","import { React, useState, useEffect } from 'react';\r\nimport { TeamTile } from '../components/TeamTile.js';\r\n\r\nimport './HomePage.scss';\r\n\r\nexport const HomePage = () => {\r\n\r\n    const [teams, setTeams] = useState([]);\r\n\r\n    useEffect(\r\n        () => {\r\n            const fetchAllTeams = async () => {\r\n                const response = await fetch(`http://localhost:8080/team`);\r\n                const data = await response.json();\r\n                setTeams(data);\r\n            }\r\n            fetchAllTeams();\r\n        }, []\r\n    );\r\n\r\n    return (\r\n        <div className=\"HomePage\">\r\n            <div className=\"header-section\">\r\n                <h1 className=\"app-name\">IPL DashBoard</h1>\r\n            </div>\r\n            <div className=\"team-grid\">\r\n                {teams.map(team => <TeamTile key={team.id} teamName={team.teamName} />)}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import './App.scss';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { MatchPage } from './pages/MatchPage';\nimport { TeamPage } from './pages/TeamPage';\nimport { HomePage } from './pages/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/teams/:teamName/matches/:year\">\n            <MatchPage />\n          </Route>\n          <Route path=\"/teams/:teamName\">\n            <TeamPage />\n          </Route>\n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}